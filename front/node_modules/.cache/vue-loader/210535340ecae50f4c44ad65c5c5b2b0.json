{"remainingRequest":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/src/molecules/ProfileForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/src/molecules/ProfileForm.vue","mtime":1618942067000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB1c2VycyBmcm9tICcuLi9hcGkvdXNlcnMnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnUHJvZmlsZUZvcm0nLAogICAgcHJvcHM6IHsKICAgICAgICBlbWFpbDogU3RyaW5nLAogICAgICAgIHVzZXJuYW1lOiBTdHJpbmcsCiAgICAgICAgYmlvOiBTdHJpbmcsCiAgICAgICAgdG9rZW46IFN0cmluZywKICAgICAgICBjYW5jZWw6IEZ1bmN0aW9uCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBtdXRhYmxlRW1haWw6IHRoaXMuZW1haWwsCiAgICAgICAgICAgIG11dGFibGVVc2VybmFtZTogdGhpcy51c2VybmFtZSwKICAgICAgICAgICAgbXV0YWJsZUJpbzogdGhpcy5iaW8KICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHNhdmU6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICB1c2Vycy51cGRhdGVCaW8oewogICAgICAgICAgICAgICAgdG9rZW46IHRoaXMudG9rZW4sCiAgICAgICAgICAgICAgICBiaW86dGhpcy5tdXRhYmxlQmlvLAogICAgICAgICAgICAgICAgdXNlcm5hbWU6IHRoaXMubXV0YWJsZVVzZXJuYW1lLAogICAgICAgICAgICAgICAgZW1haWw6IHRoaXMubXV0YWJsZUVtYWlsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3NhdmVkJywge2JpbzogdGhpcy5tdXRhYmxlQmlvLCBlbWFpbDogdGhpcy5tdXRhYmxlRW1haWwsIHVzZXJuYW1lOiB0aGlzLm11dGFibGVVc2VybmFtZX0pCiAgICAgICAgfSwKICAgIH0KfQo="},{"version":3,"sources":["ProfileForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProfileForm.vue","sourceRoot":"src/molecules","sourcesContent":["<template>\n  <b-form @submit.prevent=\"save\" class=\"col-8\">\n    <b-form-group\n        id=\"input-group-1\"\n        label=\"Email address:\"\n        label-for=\"input-1\"\n    >\n        <b-form-input\n            id=\"input-1\"\n            v-model=\"mutableEmail\"\n            type=\"text\"\n            placeholder=\"Enter an email\"\n            required\n        ></b-form-input>\n    </b-form-group>\n    <b-form-group id=\"input-group-2\" label=\"Username:\" label-for=\"input-2\">\n        <b-form-input\n            id=\"input-2\"\n            type=\"text\"\n            v-model=\"mutableUsername\"\n            placeholder=\"Enter a username\"\n            required\n        ></b-form-input>\n    </b-form-group>\n    <b-form-group id=\"input-group-2\" label=\"Biography:\" label-for=\"input-2\">\n        <b-form-input\n            id=\"input-2\"\n            v-model=\"mutableBio\"\n            placeholder=\"Enter a biography\"\n            required\n        ></b-form-input>\n    </b-form-group>\n    <b-button variant=\"danger\" @click=\"cancel\">Cancel</b-button>\n    <b-button variant=\"success\" class=\"ml-2\" @click=\"save\">Save</b-button>\n  </b-form>\n</template>\n\n<script>\nimport users from '../api/users'\n\nexport default {\n    name: 'ProfileForm',\n    props: {\n        email: String,\n        username: String,\n        bio: String,\n        token: String,\n        cancel: Function\n    },\n    data() {\n        return {\n            mutableEmail: this.email,\n            mutableUsername: this.username,\n            mutableBio: this.bio\n        }\n    },\n    methods: {\n        save: function() {\n            users.updateBio({\n                token: this.token,\n                bio:this.mutableBio,\n                username: this.mutableUsername,\n                email: this.mutableEmail\n            })\n            this.$emit('saved', {bio: this.mutableBio, email: this.mutableEmail, username: this.mutableUsername})\n        },\n    }\n}\n</script>"]}]}