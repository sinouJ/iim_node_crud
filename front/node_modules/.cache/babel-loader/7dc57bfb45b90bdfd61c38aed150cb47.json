{"remainingRequest":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/babel-loader/lib/index.js!/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/src/api/todos.js","dependencies":[{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/src/api/todos.js","mtime":1619135885000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9BcHBsaWNhdGlvbnMvTUFNUC9odGRvY3MvaWltL25vZGVqcy90b2RvX2FwcC9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXRUb2RvczogZnVuY3Rpb24gKCkgewogICAgdmFyIF9nZXRUb2RvcyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh0b2RvKSB7CiAgICAgIHZhciBkYXRhLCByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6NDQ0My9hcGkvdG9kb3MnKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gZGF0YS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICByZXR1cm4gcmVzOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0LnNlbnQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBnZXRUb2RvcyhfeCkgewogICAgICByZXR1cm4gX2dldFRvZG9zLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGdldFRvZG9zOwogIH0oKSwKICBwb3N0VG9kbzogZnVuY3Rpb24gKCkgewogICAgdmFyIF9wb3N0VG9kbyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIodG9kbykgewogICAgICB2YXIgZGF0YSwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6NDQ0My9hcGkvdG9kb3MvcG9zdCcsIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnYXV0aG9yaXphdGlvbic6ICJCZWFyZXIgIi5jb25jYXQodG9kby50b2tlbikKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiB0b2RvLnRpdGxlLAogICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogdG9kby5kZXNjcmlwdGlvbgogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBkYXRhLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDg7CiAgICAgICAgICAgICAgcmV0dXJuIHJlczsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQyLnNlbnQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIHBvc3RUb2RvKF94MikgewogICAgICByZXR1cm4gX3Bvc3RUb2RvLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIHBvc3RUb2RvOwogIH0oKSwKICBjaGVja1RvZG86IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfY2hlY2tUb2RvID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyh0b2RvKSB7CiAgICAgIHZhciBkYXRhLCByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDo0NDQzL2FwaS90b2Rvcy9jb21wbGV0ZScsIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgIGlkOiB0b2RvLmlkLAogICAgICAgICAgICAgICAgICBjb21wbGV0ZWQ6IHRvZG8uY29tcGxldGVkCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIGRhdGEuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gODsKICAgICAgICAgICAgICByZXR1cm4gcmVzOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDMuc2VudCk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gY2hlY2tUb2RvKF94MykgewogICAgICByZXR1cm4gX2NoZWNrVG9kby5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBjaGVja1RvZG87CiAgfSgpCn07"},{"version":3,"sources":["/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/src/api/todos.js"],"names":["getTodos","todo","fetch","data","json","res","postTodo","method","headers","token","body","JSON","stringify","title","description","checkTodo","id","completed"],"mappings":";;;;;AAAA,eAAe;AACXA,EAAAA,QAAQ;AAAA,4EAAE,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaC,KAAK,CAAC,iCAAD,CADlB;;AAAA;AACAC,cAAAA,IADA;AAAA;AAAA,qBAEYA,IAAI,CAACC,IAAL,EAFZ;;AAAA;AAEAC,cAAAA,GAFA;AAAA;AAAA,qBAGOA,GAHP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADG;AAMXC,EAAAA,QAAQ;AAAA,4EAAE,kBAAOL,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaC,KAAK,CAAC,sCAAD,EAAyC;AAC7DK,gBAAAA,MAAM,EAAE,MADqD;AAE7DC,gBAAAA,OAAO,EAAE;AACL,4BAAU,kBADL;AAEL,kCAAgB,kBAFX;AAGL,oDAA2BP,IAAI,CAACQ,KAAhC;AAHK,iBAFoD;AAO7DC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,kBAAAA,KAAK,EAAEZ,IAAI,CAACY,KAAb;AAAoBC,kBAAAA,WAAW,EAAEb,IAAI,CAACa;AAAtC,iBAAf;AAPuD,eAAzC,CADlB;;AAAA;AACAX,cAAAA,IADA;AAAA;AAAA,qBAUYA,IAAI,CAACC,IAAL,EAVZ;;AAAA;AAUAC,cAAAA,GAVA;AAAA;AAAA,qBAWOA,GAXP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KANG;AAmBXU,EAAAA,SAAS;AAAA,6EAAE,kBAAOd,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACYC,KAAK,CAAC,0CAAD,EAA6C;AACjEK,gBAAAA,MAAM,EAAE,KADyD;AAEjEC,gBAAAA,OAAO,EAAE;AACL,4BAAU,kBADL;AAEL,kCAAgB;AAFX,iBAFwD;AAMjEE,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBI,kBAAAA,EAAE,EAAEf,IAAI,CAACe,EADQ;AAEjBC,kBAAAA,SAAS,EAAEhB,IAAI,CAACgB;AAFC,iBAAf;AAN2D,eAA7C,CADjB;;AAAA;AACDd,cAAAA,IADC;AAAA;AAAA,qBAYWA,IAAI,CAACC,IAAL,EAZX;;AAAA;AAYDC,cAAAA,GAZC;AAAA;AAAA,qBAaMA,GAbN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAnBE,CAAf","sourcesContent":["export default {\n    getTodos: async (todo) => {\n        const data = await fetch('http://localhost:4443/api/todos');\n        const res = await data.json();\n        return await res;\n    },\n    postTodo: async (todo) => {\n        const data = await fetch('http://localhost:4443/api/todos/post', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'authorization': `Bearer ${todo.token}`\n            },\n            body: JSON.stringify({title: todo.title, description: todo.description})\n        })\n        const res = await data.json()\n        return await res\n    },\n    checkTodo: async (todo) => {\n        const data = await fetch('http://localhost:4443/api/todos/complete', {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: todo.id,\n                completed: todo.completed\n            })\n        })\n        const res = await data.json()\n        return await res\n    }\n}"]}]}