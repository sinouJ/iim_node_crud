{"remainingRequest":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/babel-loader/lib/index.js!/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/src/atoms/TextInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/src/atoms/TextInput.vue","mtime":1619212305000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUZXh0SW5wdXQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0b2dnbGU6IGZhbHNlLAogICAgICB0ZXh0OiAnJwogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBuYW1lOiBTdHJpbmcsCiAgICBwbGFjZWhvbGRlcjogU3RyaW5nCiAgfSwKICBtZXRob2RzOiB7CiAgICB0b2dnbGVGb2N1czogZnVuY3Rpb24gdG9nZ2xlRm9jdXMoKSB7CiAgICAgIHRoaXMudG9nZ2xlID0gIXRoaXMudG9nZ2xlOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHRleHQ6IGZ1bmN0aW9uIHRleHQobmV3VmFsdWUsIG9sZFZhbHVlKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZScsIG5ld1ZhbHVlKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["TextInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgBA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAAA,GAFA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,MADA;AAEA,IAAA,WAAA,EAAA;AAFA,GANA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,uBAAA;AAAA,WAAA,MAAA,GAAA,CAAA,KAAA,MAAA;AAAA;AADA,GAVA;AAaA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,cAAA,QAAA,EAAA,QAAA,EAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,QAAA;AACA;AAHA;AAbA,CAAA","sourcesContent":["<template>\n    <div :class=\"{focus: this.toggle}\">\n        <input \n            type=\"text\" \n            :name=\"name\" \n            :id=\"name\" \n            :placeholder=\"placeholder\" \n            @focus=\"toggleFocus\" \n            @blur=\"toggleFocus\" \n            autocomplete=\"off\"\n            v-model=\"text\"\n        >\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'TextInput',\n    data: () => ({\n        toggle: false,\n        text: ''\n    }),\n    props: {\n        name: String,\n        placeholder: String\n    },\n    methods: {\n        toggleFocus: function() {this.toggle = !this.toggle}\n    },\n    watch: {\n        text: function(newValue, oldValue) {\n            this.$emit('update', newValue)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    @import '../scss/main.scss';\n\n    div {\n        position: relative;\n        transition: all .5s ease;\n        width: 100%;\n\n        &::after {\n            content: '';\n            position: absolute;\n            width: 100%;\n            transform: scaleX(0);\n            height: 2px;\n            background-color: $primary;\n            left: 0;\n            bottom: -2px;\n            border-radius: 2px;\n            transition: inherit;\n        }\n\n        &::before {\n            content: '';\n            position: absolute;\n            width: 100%;\n            height: 1px;\n            background-color: $gray-border;\n            left: 0;\n            bottom: -2px;\n            border-radius: 2px;\n        }\n\n        &.focus {\n            color: $primary;\n\n            &::after {\n                transform: scaleX(1)\n            }\n        }\n\n        input {\n            border: 0;\n            outline: none;\n            color: $black;\n            display: block;\n            width: 100%;\n\n            &::placeholder {\n                color: $gray-light;\n            }\n        }\n    }\n</style>"],"sourceRoot":"src/atoms"}]}