{"remainingRequest":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/babel-loader/lib/index.js!/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/src/store/modules/todos.js","dependencies":[{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/src/store/modules/todos.js","mtime":1633526134365},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Applications/MAMP/htdocs/iim/nodejs/todo_app/front/src/store/modules/todos.js"],"names":["todos","users","state","openTodos","doingTodos","closedTodos","show","title","description","getters","actions","GET_ALL_TODOS","commit","getTodos","GET_USER_BY_TODO","dispatch","POST_TODO","todo","CHECK_TODO","id","STORE_TITLE","payload","STORE_DESCRIPTION","RESET_STORE_POSTED_TODO","mutations","getUserById","i","length","el","UserId","user","toggleCompleteTodo","selectedTodo","index","findIndex","checkTodo","splice","postTodo","getUser","push","sortTodos","filter","completed","doing","storeTitle","storeDescription","resetTitle","resetDescription","namespaced"],"mappings":"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","sourcesContent":["import todos from '../../api/todos'\nimport users from '../../api/users'\n\nconst state = {\n    todos: [],\n    openTodos: [],\n    doingTodos: [],\n    closedTodos:[],\n    show: false,\n    title: '',\n    description: ''\n}\n\nconst getters = {\n    todos: state => {\n        return {\n            openTodos: state.openTodos,\n            doingTodos: state.doingTodos,\n            closedTodos: state.closedTodos\n        }\n    },\n    show: state => state.show,\n    title: state => state.title,\n    description: state => state.description\n}\n\nconst actions = {\n    GET_ALL_TODOS: async ({ commit }) => {\n        commit('getTodos', await todos.getTodos(state))\n        commit('sortTodos')\n    },\n    GET_USER_BY_TODO: async({commit, dispatch}) => {\n        await dispatch('GET_ALL_TODOS')\n        commit('getUserById')\n    },\n    POST_TODO: async ({commit}, todo) => {\n        commit('postTodo', await todo)\n        commit('getUserById')\n    },\n    CHECK_TODO: ({ commit }, id) => {\n        commit('toggleCompleteTodo', id)\n    },\n    STORE_TITLE: ({commit}, payload) => {\n        commit('storeTitle', payload)\n    },\n    STORE_DESCRIPTION: ({commit}, payload) => {\n        commit('storeDescription', payload)\n    },\n    RESET_STORE_POSTED_TODO: ({commit}) => {\n        commit('resetTitle')\n        commit('resetDescription')\n    }\n}\n\nconst mutations = {\n    getTodos: (state, payload) => {\n        state.todos = payload\n    },\n    getUserById: async (state) => {\n        for (let i = 0; i < state.todos.length; i++) {\n            const el = state.todos[i];\n            const user = await users.getUserById(el.UserId)\n            el.user = user\n        }\n        state.show = true\n    },\n    toggleCompleteTodo: async (state, selectedTodo) => {\n        const index = state.todos.findIndex( todo => todo.id === selectedTodo.id)\n        selectedTodo = await todos.checkTodo(selectedTodo)\n        state.todos.splice(index, 1, {...selectedTodo, user: await users.getUserById(selectedTodo.UserId)})\n    },\n    postTodo: async (state, payload) => {\n        const getUser = await users.getUserById(payload.UserId)\n        payload.user = getUser\n        state.todos.push(payload)\n    },\n    sortTodos: async (state) => {\n        const todos = await state.todos\n        state.openTodos = todos.filter(todo => todo.completed === false && todo.doing === false)\n        state.doingTodos = todos.filter(todo => todo.completed === false && todo.doing === true)\n        state.closedTodos = todos.filter(todo => todo.completed === true && todo.doing === false)\n    },\n    storeTitle: (state, payload) => {\n        state.title = payload\n    },\n    storeDescription: (state, payload) => {\n        state.description = payload\n    },\n    resetTitle: (state) => {\n        state.title = ''\n    },\n    resetDescription: (state) => {\n        state.description = ''\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n}"]}]}